generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int            @id @default(autoincrement())
  nome          String
  email         String         @unique
  senha         String
  role          Role           @default(ADVOGADO)
  ativo         Boolean        @default(true) 
  clientes      Cliente[]
  compromissos  Compromisso[] 
  logs          Log[]
}


model Cliente {
  id         Int       @id @default(autoincrement())
  nome       String
  cpf        String    @unique
  telefone   String
  endereco   String?
  usuarioId  Int
  usuario    Usuario   @relation(fields: [usuarioId], references: [id])
  fichas     Ficha[]
  createdAt  DateTime  @default(now()) 
}

model Ficha {
  id          Int         @id @default(autoincrement())
  descricao   String
  data        DateTime    @default(now())
  cliente     Cliente     @relation(fields: [clienteId], references: [id])
  clienteId   Int
  andamentos  Andamento[] 
}

model Andamento {
  id        Int       @id @default(autoincrement())
  descricao String
  data      DateTime  @default(now())
  ficha     Ficha     @relation(fields: [fichaId], references: [id])
  fichaId   Int
}

model Compromisso {
  id          Int              @id @default(autoincrement())
  titulo      String
  descricao   String?
  dataHora    DateTime
  tipo        TipoCompromisso
  usuarioId   Int
  usuario     Usuario          @relation(fields: [usuarioId], references: [id])
  criadoEm    DateTime         @default(now())
}

model Log {
  id           Int      @id @default(autoincrement())
  acao         String
  tabela       String
  registroId   Int
  usuarioId    Int
  data         DateTime @default(now())

  usuario      Usuario  @relation(fields: [usuarioId], references: [id])
}


enum TipoCompromisso {
  AUDIENCIA
  REUNIAO
  PRAZO
}

enum Role {
  MASTER
  ADVOGADO
}
